# Generated by Django 4.2.23 on 2025-08-04 23:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('entity_type', models.CharField(choices=[('account', 'Financial Account'), ('contact', 'Contact/Person'), ('category', 'Transaction Category'), ('tag', 'Tag'), ('investment', 'Investment'), ('goal', 'Financial Goal')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=50)),
                ('data', models.JSONField(default=dict)),
                ('relationships', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('member', 'Member'), ('child', 'Child (Family)'), ('guest', 'Guest')], default='member', max_length=20)),
                ('member_config', models.JSONField(default=dict)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense'), ('transfer', 'Transfer'), ('investment_buy', 'Buy Investment'), ('investment_sell', 'Sell Investment'), ('lending', 'Lending/Borrowing'), ('recurring', 'Recurring Template'), ('group_expense', 'Group Expense')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('template', 'Template')], default='active', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('transaction_data', models.JSONField(default=dict)),
                ('tags', models.JSONField(default=list)),
                ('categories', models.JSONField(default=list)),
                ('primary_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_transactions', to='core.entity')),
                ('secondary_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_transactions', to='core.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.JSONField(default=dict)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'indexes': [models.Index(fields=['key'], name='core_system_key_07f5b4_idx')],
            },
        ),
        migrations.CreateModel(
            name='SocialGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('group_type', models.CharField(choices=[('family', 'Family'), ('friends', 'Friends'), ('roommates', 'Roommates'), ('business', 'Business'), ('trip', 'Trip/Event'), ('club', 'Club/Organization'), ('custom', 'Custom')], max_length=20)),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('invite_only', 'Invite Only')], default='private', max_length=20)),
                ('group_config', models.JSONField(default=dict)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_settled', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('member_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('members', models.ManyToManyField(related_name='social_groups', through='core.GroupMembership', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('plan_type', models.CharField(choices=[('base', 'Base Subscription Plan'), ('addon', 'Add-on Feature'), ('bundle', 'Bundle Package')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('billing_cycle', models.CharField(default='monthly', max_length=20)),
                ('config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
            ],
            options={
                'indexes': [models.Index(fields=['plan_type', 'is_active'], name='core_plan_plan_ty_4b5d65_idx'), models.Index(fields=['code'], name='core_plan_code_1f32c8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('notification_type', models.CharField(choices=[('transaction', 'Transaction Alert'), ('goal', 'Goal Update'), ('investment', 'Investment Alert'), ('group_expense', 'Group Expense'), ('payment_reminder', 'Payment Reminder'), ('relationship', 'Relationship Update'), ('group_update', 'Group Update'), ('system', 'System Notification'), ('ai_insight', 'AI Insight'), ('security', 'Security Alert')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('action_url', models.URLField(blank=True)),
                ('data', models.JSONField(default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_method', models.JSONField(default=list)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('related_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.entity')),
                ('related_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.socialgroup')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.socialgroup'),
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('document_type', models.CharField(choices=[('invoice', 'Invoice'), ('receipt', 'Receipt'), ('statement', 'Bank Statement'), ('report', 'Report'), ('contract', 'Contract'), ('other', 'Other Document')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('file_size', models.BigIntegerField(default=0)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('document_data', models.JSONField(default=dict)),
                ('ai_processed', models.BooleanField(default=False)),
                ('ai_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ai_extracted_data', models.JSONField(blank=True, default=dict)),
                ('related_entities', models.JSONField(default=list)),
                ('related_transactions', models.JSONField(default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('activity_type', models.CharField(choices=[('transaction', 'Transaction Activity'), ('ai_usage', 'AI Service Usage'), ('plan_change', 'Plan/Subscription Change'), ('system', 'System Activity'), ('user_action', 'User Action')], max_length=20)),
                ('action', models.CharField(max_length=100)),
                ('activity_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('related_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.entity')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('relationship_type', models.CharField(choices=[('family', 'Family Member'), ('spouse', 'Spouse/Partner'), ('friend', 'Friend'), ('business', 'Business Partner'), ('colleague', 'Colleague'), ('advisor', 'Financial Advisor'), ('accountant', 'Accountant'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('blocked', 'Blocked'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('relationship_config', models.JSONField(default=dict)),
                ('is_mutual', models.BooleanField(default=False)),
                ('can_view_financial_data', models.BooleanField(default=False)),
                ('can_add_transactions', models.BooleanField(default=False)),
                ('can_manage_joint_accounts', models.BooleanField(default=False)),
                ('related_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_received', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_initiated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'status'], name='core_userre_user_id_5b3bb0_idx'), models.Index(fields=['related_user', 'status'], name='core_userre_related_383a4e_idx'), models.Index(fields=['relationship_type'], name='core_userre_relatio_f34ff8_idx'), models.Index(fields=['is_mutual'], name='core_userre_is_mutu_476294_idx')],
                'unique_together': {('user', 'related_user')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('config', models.JSONField(default=dict)),
                ('current_plan', models.CharField(default='free', max_length=50)),
                ('subscription_status', models.CharField(default='trial', max_length=20)),
                ('ai_credits_remaining', models.IntegerField(default=100)),
                ('total_monthly_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='core_userpr_user_id_830b32_idx'), models.Index(fields=['subscription_status'], name='core_userpr_subscri_8394b8_idx'), models.Index(fields=['current_plan'], name='core_userpr_current_3bc552_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'date'], name='core_transa_user_id_190a3b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'transaction_type'], name='core_transa_user_id_103c58_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'status'], name='core_transa_user_id_5b29f4_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['primary_entity'], name='core_transa_primary_89136e_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['amount'], name='core_transa_amount_d2359a_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['date'], name='core_transa_date_2d33ba_idx'),
        ),
        migrations.AddIndex(
            model_name='socialgroup',
            index=models.Index(fields=['owner', 'is_active'], name='core_social_owner_i_33d5ee_idx'),
        ),
        migrations.AddIndex(
            model_name='socialgroup',
            index=models.Index(fields=['group_type', 'is_active'], name='core_social_group_t_557814_idx'),
        ),
        migrations.AddIndex(
            model_name='socialgroup',
            index=models.Index(fields=['privacy'], name='core_social_privacy_436e52_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='core_notifi_user_id_cb8f07_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'created_at'], name='core_notifi_user_id_7862c3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='core_notifi_notific_d4d13f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'is_read'], name='core_notifi_priorit_9aa268_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['related_group'], name='core_notifi_related_77b2b8_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['group', 'is_active'], name='core_groupm_group_i_c3fe8a_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['user', 'is_active'], name='core_groupm_user_id_97a03e_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['role'], name='core_groupm_role_ea8f07_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('group', 'user')},
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['user', 'entity_type'], name='core_entity_user_id_3fb753_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['entity_type', 'is_active'], name='core_entity_entity__ee1912_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['code'], name='core_entity_code_fde2f5_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['name'], name='core_entity_name_43cfc9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='entity',
            unique_together={('user', 'entity_type', 'code')},
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['user', 'document_type'], name='core_docume_user_id_a9c969_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['user', 'created_at'], name='core_docume_user_id_71483f_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['ai_processed'], name='core_docume_ai_proc_383a1e_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['user', 'activity_type'], name='core_activi_user_id_96f9c3_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['user', 'created_at'], name='core_activi_user_id_5648ec_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['action'], name='core_activi_action_7aa8f9_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['related_entity'], name='core_activi_related_c278d1_idx'),
        ),
        migrations.AddIndex(
            model_name='activity',
            index=models.Index(fields=['related_transaction'], name='core_activi_related_70a428_idx'),
        ),
    ]
